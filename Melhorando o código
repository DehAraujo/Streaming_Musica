CREATE DATABASE deise;
USE deise;

CREATE TABLE Artista(
	id_artista INT unsigned not null auto_increment,
    artista_nome VARCHAR(100) not null,
    artista_data DATE not null,
    PRIMARY KEY(id_artista)
);

CREATE TABLE Disco(
	id_disco INT unsigned not null auto_increment,
    disco_titulo VARCHAR(100) not null,
    disco_data DATE not null,
    id_artista INT unsigned,
    PRIMARY KEY(id_disco),
    FOREIGN KEY(id_artista) REFERENCES Artista(id_artista)
);

CREATE TABLE Musica(
	id_musica INT unsigned not null auto_increment,
	musica_titulo VARCHAR(100) not null,
    musica_duracao TIME not null,
    id_artista INT unsigned,
    id_disco INT unsigned,
    PRIMARY KEY(id_musica),
    FOREIGN KEY(id_artista) REFERENCES Artista(id_artista),
    FOREIGN KEY (id_disco) REFERENCES Disco(id_disco)
);

CREATE TABLE Usuario(
	id_usuario INT unsigned not null auto_increment,
    usuario_nome VARCHAR(100) not null,
    usuario_email VARCHAR(100) UNIQUE not null,
    usuario_dataregistro DATE not null,
    PRIMARY KEY(id_usuario)
);

CREATE TABLE Playlist(
	id_playlist INT unsigned not null auto_increment,
    playlist_titulo VARCHAR(100) not null,
    id_usuario INT unsigned,
    PRIMARY KEY(id_playlist),
    FOREIGN KEY(id_usuario) REFERENCES Usuario(id_usuario)
);





CREATE TABLE Musica_playlist(
	id_musicaplaylist INT unsigned not null auto_increment,
    id_musica INT unsigned,
    id_playlist INT unsigned,
    id_usuario INT unsigned,
    PRIMARY KEY(id_musicaplaylist),
    FOREIGN KEY(id_musica) REFERENCES Musica(id_musica),
	FOREIGN KEY(id_playlist) REFERENCES Playlist(id_playlist),
    FOREIGN KEY(id_usuario) REFERENCES Usuario(id_usuario)
);

ALTER TABLE Musica_Playlist
ADD id_playlist INT unsigned;
select * from Musica_Playlist;
ALTER TABLE Musica_Playlist
ADD id_disco INT unsigned;
select * from Musica_Playlist;
ALTER TABLE Musica_playlist

    
    
    SELECT * from Musica;
    select * from Playlist;
    
INSERT INTO Artista (artista_nome, artista_data) VALUES 
	('Henrique e Juliano', '1989-11-23'),
    ('Gustavo Lima', '1989-09-03'),
    ('João Neto', '1979-08-12');

INSERT INTO Disco (disco_titulo, disco_data, id_artista) VALUES 
	('Manifesto Musical', '2022-05-20', 1),
    ('Buteco do Gustavo', '2015-07-24', 2),
    ('Ao Vivo em Vitória', '2014-04-21', 3);

INSERT INTO Musica(musica_titulo, musica_duracao, id_artista, id_disco) VALUES 
	#Henrique e Juliano
	('Arranhao', '00:02:34', 1, 1),
    ('De Garrafa a Pior', '00:03:45', 1, 1),
    ('Rasteira', '00:03:15', 1, 1),
    ('Mundo do Avesso', '00:04:00', 1, 1),
    ('Coração de Isca', '00:02:50', 1, 1),
    ('Casal de Sapo', '00:03:05', 1, 1),
    ('Atração Fatal', '00:03:20', 1, 1),
    ('Desapego', '00:03:30', 1, 1),
    ('Teu Amor', '00:02:40', 1, 1),
    ('Volume 3', '00:03:55', 1, 1),
    ('Agradeço a Deus', '00:03:10', 1, 1),
    ('Regressiva', '00:04:05', 1, 1),
    
   #Gustavo Lima 
	('Carta Branca', '00:03:48', 2, 2),
	('Pot-Pourri: Pão de Mel / Locutor', '00:03:31', 2, 2),
	('Tô Por Aí', '00:04:14', 2, 2),
	('Rumo a Goiânia (part. Leonardo)', '00:03:37', 2, 2),
	('Fui Fiel', '00:03:20', 2, 2),
	('A Cor da Esperança', '00:03:43', 2, 2),
	('Tá Faltando Eu (part. Jorge & Mateus)', '00:03:14', 2, 2),
	('Jejum de Amor', '00:02:47', 2, 2),
	('Do Outro Lado da Moeda (part. Zezé Di Camargo & Luciano)', '00:04:03', 2, 2),
	('Pot-Pourri: Página de Amigos / Tentei Te Esquecer', '00:04:32', 2, 2),
	('Nem Dormindo Consigo Te Esquecer (part. Bruno & Marrone)', '00:04:18', 2, 2),
	('Pot-Pourri: Morena Bonita / Cama Fria / Doce Amada (part. Alcino Landim)', '00:06:10', 2, 2),
	('Pot-Pourri: Leva Minha Timidez / É Amor Demais', '00:03:36', 2, 2),
	('Buteco do Gusttavo', '00:03:36', 2, 2),
    
    #João Neto 
	('Eu Sou Aquele', '00:03:30', 3, 3),
    ('Chamam Isso de Traição (Part. Bruno & Marrone)', '00:04:10', 3, 3),
    ('Só Tomando Uma', '00:03:15', 3, 3),
    ('Ele Não Vai Mudar', '00:03:40', 3, 3),
    ('É Só Eu Melhorar (Part. César Menotti & Fabiano)', '00:04:05', 3, 3),
    ('Cama e Casa Separada', '00:03:20', 3, 3),
    ('Última Dose (Part. Cristiano Araújo)', '00:03:50', 3, 3),
    ('Preciso', '00:02:45', 3, 3),
    ('Pode Isso Produção (Part. Henrique & Juliano)', '00:03:35', 3, 3),
    ('É Claro Que Eu Tô', '00:02:55', 3, 3),
    ('Minha Fantasia', '00:03:25', 3, 3),
    ('Presto Pouco (Part. Gregory & Rafael)', '00:03:00', 3, 3),
    ('Engarrafamento', '00:03:10', 3, 3),
    ('Bebeu Fudeu', '00:02:50', 3, 3);
    
    INSERT INTO Usuario(usuario_nome, usuario_email, usuario_dataregistro) VALUES
    ('Alice Pires', 'alice.pires@gmail.com',  '2016-01-10'),
    ('Bruno Silva', 'bruno.silva@hotmail.com', '2017-03-22'),
    ('Carlos Souza', 'carlos.souza@yahoo.com', '2018-07-14'),
    ('Daniela Costa', 'daniela.costa@outlook.com', '2019-01-30'),
    ('Eduardo Lima', 'eduardo.lima@gmail.com', '2020-05-21'),
    ('Fernanda Gomes', 'fernanda.gomes@hotmail.com', '2016-11-12'),
    ('Gabriel Almeida', 'gabriel.almeida@yahoo.com', '2017-02-28'),
    ('Helena Santos', 'helena.santos@outlook.com', '2018-09-05'),
    ('Igor Ferreira', 'igor.ferreira@gmail.com', '2019-06-17'),
    ('Julia Oliveira', 'julia.oliveira@hotmail.com', '2020-08-22'),
    ('Kleber Martins', 'kleber.martins@yahoo.com', '2016-12-09'),
    ('Larissa Rodrigues', 'larissa.rodrigues@outlook.com', '2017-04-11'),
    ('Marcos Dias', 'marcos.dias@gmail.com', '2018-01-20'),
    ('Natalia Barbosa', 'natalia.barbosa@hotmail.com', '2019-03-13'),
    ('Otavio Pereira', 'otavio.pereira@yahoo.com', '2020-10-15'),
    ('Patricia Melo', 'patricia.melo@outlook.com', '2016-02-26'),
    ('Ricardo Carvalho', 'ricardo.carvalho@gmail.com', '2017-05-08'),
    ('Sabrina Rocha', 'sabrina.rocha@hotmail.com', '2018-06-29'),
    ('Thiago Fernandes', 'thiago.fernandes@yahoo.com', '2019-07-18'),
    ('Vanessa Araujo', 'vanessa.araujo@outlook.com', '2020-11-01');
    
    INSERT INTO Playlist(playlist_titulo, id_usuario) VALUES
	('Favoritas', 1),
    ('Sertanejo', 2),
    ('So as melhores', 3),
    ('Henrique', 1),
    ('Insqueciveis', 4),
    ('So nostalgia', 5),
    ('Legiao', 6),
    ('Good time', 7),
    ('Marilha', 8);
    
    INSERT INTO Musica_Playlist(id_usuario, id_musica, id_playlist) VALUES 
	#Usuario 1
    (1,1,1),
    (1,5,1),
    (1,8,1),
    (1,9,1),
    (1,10,1),
    (1,28,1),
    (1,10,1),
    (1, 1, 1),
    (1, 2, 1),
    (1, 3, 1),
    (1, 4, 1),
    (1, 5, 1),
    (1, 6, 1),
    (1, 7, 1),
    (1, 8, 1),
    (1, 9, 1),
    (1, 10, 1),
    
    #Usuario2
    (2, 11, 2),
    (2, 12, 2),
    (2, 13, 2),
    (2, 14, 2),
    (2, 15, 2),
    (2, 16, 2),
    (2, 17, 2),
    (2, 18, 2),
    (2, 19, 2),
    
    #Usuario3
    (3, 21, 3),
    (3, 22, 3),
    (3, 23, 3),
    (3, 24, 3),
    (3, 25, 3),
    (3, 26, 3),
    (3, 27, 3),
    (3, 28, 3),
    (3, 29, 3),
    (3, 30, 3),
    
    #Usuario4
    (4, 31, 4),
    (4, 32, 4),
    (4, 33, 4),
    (4, 34, 4),
    (4, 35, 4),
    (4, 36, 4),
    (4, 37, 4),
    (4, 38, 4),
    (4, 39, 4),
    (4, 40, 4),
    
    #Usuario5
    (5, 1, 5),
    (5, 2, 5),
    (5, 3, 5),
    (5, 4, 5),
    (5, 5, 5),
    (5, 6, 5),
    (5, 7, 5),
    (5, 8, 5),
    (5, 9, 5),
    
    (6, 11, 6),
    (6, 12, 6),
    (6, 35, 6),
    (6, 14, 6),
    (6, 15, 6),
    (6, 16, 6),
    (6, 40, 6),
    (6, 18, 6),
    (6, 19, 6),
    (6, 20, 6);
    
    
 # 1. Liste o título de todas as músicas e suas durações.   
	SELECT 
		musica_titulo, 
		musica_duracao 
	FROM 
		Musica; 

# 2. Encontre o nome de todos os artistas que têm mais de 5 músicas em seu repertório.
	SELECT 
		a.id_artista,
		a.artista_nome,
		COUNT(m.id_musica) AS Quantidade_Musicas
	FROM 
		Artista a
	JOIN 
		Musica m ON a.id_artista = m.id_artista
	GROUP BY
		a.id_artista,
		a.artista_nome
	HAVING 
		COUNT(m.id_musica) > 5;
    
# 3. Quais são os títulos dos discos lançados após 2020?
	SELECT 
		disco_titulo,
        disco_data
	FROM
		Disco
	WHERE
		disco_data > '2020-12-31';
		
# 4. Liste os títulos das músicas e os nomes dos artistas que as interpretam, ordenados pelo título da música.
SELECT
	m.musica_titulo,
    a.artista_nome
FROM 
	Musica m
JOIN Artista a ON a.id_artista = m.id_artista
ORDER BY musica_titulo;

select * from Musica;
    
# 5. Encontre os títulos das playlists que contêm a música com o título 'Arranhao'.
SELECT 
	p.playlist_titulo
FROM 
	Playlist p
JOIN 
	Musica_Playlist mp ON p.id_playlist = mp.id_playlist 
JOIN
	Musica m ON  m.id_musica = mp.id_musica
WHERE
	m.musica_titulo = 'Arranhao';

# 6. Liste os usuários que criaram playlists que contêm músicas do disco 'Buteco do Gustavo'.
SELECT u.usuario_nome, m.musica_titulo, d.disco_titulo
FROM 
	Musica_playlist mp
JOIN 
	Usuario u ON mp.id_usuario = u.id_usuario
JOIN 	
	Playlist p ON mp.id_playlist = p.id_playlist
JOIN
	Musica m ON mp.id_musica = m.id_musica
JOIN	
	Disco d ON m.id_disco = d.id_disco 
WHERE
	d.disco_titulo = 'Buteco do Gustavo';

# 7. Qual é a duração média das músicas de um artista específico?
SELECT 
	a.artista_nome,
AVG(m.musica_duracao) AS DuracaoMedia
FROM 
	Musica m
JOIN 
	Artista a ON m.id_artista = a.id_artista
GROUP BY 
	a.artista_nome
HAVING 
	a.artista_nome = 'Henrique e Juliano';

#8. Encontre todos os artistas que não têm músicas.


# 9. Liste todos os discos que contêm mais de 10 músicas.
SELECT d.disco_titulo,
COUNT(m.id_musica) AS Numero_Musicas
FROM Disco d
JOIN Musica m ON d.id_disco = m.id_disco
GROUP BY d.disco_titulo
HAVING COUNT(m.id_musica) > 10;

# 10. Quais são os nomes dos artistas que têm discos lançados antes de 2010 e que têm músicas na playlist 'Top 50'?
SELECT a.artista_nome, d.disco_data
FROM Artista a
JOIN Disco d ON a.id_artista = d.id_artista
WHERE d.disco_data <= '2015-12-31' ;
#Colocar Discos antes de 2009

# 11. Quais músicas são interpretadas por mais de um artista?
#Arrumar o codigo para isso

# 12. Liste os títulos das músicas que aparecem em mais de uma playlist.
SELECT m.musica_titulo, p.playlist_titulo
FROM Playlist p
JOIN Musica_Playlist mp ON p.id_playlist = mp.id_playlist
JOIN Musica m ON mp.id_musica = m.id_musica;

# 13. Encontre os nomes dos usuários que têm playlists que incluem a música 'Ele não vai mudar'.
SELECT u.usuario_nome, p.playlist_titulo, m.musica_titulo
FROM Usuario u
JOIN Playlist p ON u.id_usuario = p.id_usuario
JOIN Musica_playlist mp ON mp.id_playlist = p.id_playlist
JOIN Musica m ON mp.id_musica = m.id_musica
WHERE m.musica_titulo = 'Ele Não Vai Mudar';

# 14. Qual é o título da música mais longa do disco 'Manifesto Musical'?
SELECT m.musica_titulo, m.musica_duracao
FROM Musica m
JOIN Disco d ON m.id_disco = d.id_disco
WHERE d.disco_titulo = 'Manifesto Musical'
ORDER BY m.musica_duracao DESC
LIMIT 1;

# 15. Liste todos os discos lançados por um artista específico em um determinado ano.
SELECT *
FROM Disco d
JOIN Artista a ON d.id_artista = a.id_artista
WHERE d.disco_data BETWEEN '2021-01-01' AND '2023-12-31';

# 16. Quais são os nomes dos artistas que têm músicas em playlists criadas por um usuário específico?
SELECT DISTINCT a.artista_nome, m.musica_titulo
FROM Musica_Playlist mp
JOIN  Musica m ON mp.id_musica = m.id_musica
JOIN Playlist p ON mp.id_playlist = p.id_playlist
JOIN Usuario u ON mp.id_usuario = u.id_usuario
JOIN Artista a ON m.id_artista = a.id_artista
WHERE u.usuario_nome = 'Alice Pires';



# 17. Encontre a lista de músicas que não estão em nenhuma playlist.
# 18. Liste os títulos das músicas e os nomes dos artistas que têm mais de 3 músicas em uma mesma playlist.
# 19. Quais são os discos que contêm músicas de artistas que têm pelo menos 2 discos lançados?
# 20. Liste todos os usuários e suas playlists, mas apenas para playlists que contêm pelo menos 5 músicas?
